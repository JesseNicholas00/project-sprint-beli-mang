// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JesseNicholas00/BeliMang/repos/order (interfaces: OrderRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	order "github.com/JesseNicholas00/BeliMang/repos/order"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderRepository is a mock of OrderRepository interface.
type MockOrderRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOrderRepositoryMockRecorder
}

// MockOrderRepositoryMockRecorder is the mock recorder for MockOrderRepository.
type MockOrderRepositoryMockRecorder struct {
	mock *MockOrderRepository
}

// NewMockOrderRepository creates a new mock instance.
func NewMockOrderRepository(ctrl *gomock.Controller) *MockOrderRepository {
	mock := &MockOrderRepository{ctrl: ctrl}
	mock.recorder = &MockOrderRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderRepository) EXPECT() *MockOrderRepositoryMockRecorder {
	return m.recorder
}

// CreateEstimate mocks base method.
func (m *MockOrderRepository) CreateEstimate(arg0 context.Context, arg1 order.Estimate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEstimate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateEstimate indicates an expected call of CreateEstimate.
func (mr *MockOrderRepositoryMockRecorder) CreateEstimate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEstimate", reflect.TypeOf((*MockOrderRepository)(nil).CreateEstimate), arg0, arg1)
}

// FindEstimateById mocks base method.
func (m *MockOrderRepository) FindEstimateById(arg0 context.Context, arg1 string) (order.Estimate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindEstimateById", arg0, arg1)
	ret0, _ := ret[0].(order.Estimate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindEstimateById indicates an expected call of FindEstimateById.
func (mr *MockOrderRepositoryMockRecorder) FindEstimateById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindEstimateById", reflect.TypeOf((*MockOrderRepository)(nil).FindEstimateById), arg0, arg1)
}

// ListOrderSummary mocks base method.
func (m *MockOrderRepository) ListOrderSummary(arg0 context.Context, arg1 order.OrderSummaryListFilter) ([]order.OrderSummaryView, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOrderSummary", arg0, arg1)
	ret0, _ := ret[0].([]order.OrderSummaryView)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListOrderSummary indicates an expected call of ListOrderSummary.
func (mr *MockOrderRepositoryMockRecorder) ListOrderSummary(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOrderSummary", reflect.TypeOf((*MockOrderRepository)(nil).ListOrderSummary), arg0, arg1)
}
